openapi: 3.0.0
info:
  title: Connection Requests
  description: >-
    A Connection Request is an object representing the willingness of an SAP
    Concur user to connect with a specific TripLink partner.
  version: 1.0.0
servers:
  - url: http://{{baseurl}}
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
security:
  - bearerAuth: []
tags:
  - name: common
  - name: common > connectionrequests
  - name: common > connectionrequests > {id}
paths:
  /common/connectionrequests/{id}:
    get:
      tags:
        - common > connectionrequests > {id}
      summary: Get a connection request by ID
      description: Gets a connection request by ID.
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                firstName: <string>
                ID: <string>
                lastModified: <string>
                lastName: <string>
                loyaltyNumber: <string>
                middleName: <string>
                requestToken: <string>
                status: <string>
                URI: <string>
                userId: <string>
                emailAddresses:
                  email1: <string>
                  email2: <string>
                  email3: <string>
                  email4: <string>
                  email5: <string>
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
    put:
      tags:
        - common > connectionrequests > {id}
      summary: Update a connection request by ID
      description: >-
        Updates the specified connection request. Only the fields provided in
        the supplied object are updated. Missing fields will not be altered.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                status: <string>
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
          example: <string>
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
  /common/connectionrequests:
    get:
      tags:
        - common > connectionrequests
      summary: Get all connection requests
      description: Gets all connection requests that match the TripLink supplier ID.
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: limit
          in: query
          schema:
            type: string
          description: >-
            The number of records to return. The default is 5 and the maximum is
            10.
          example: <integer>
        - name: offset
          in: query
          schema:
            type: string
          description: >-
            The starting point of the set of results. The default is the first
            page, which is equivalent to the value 0.
          example: <integer>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                Items:
                  firstName: <string>
                  ID: <string>
                  lastModified: <string>
                  lastName: <string>
                  loyaltyNumber: <string>
                  middleName: <string>
                  requestToken: <string>
                  status: <string>
                  URI: <string>
                  userId: <string>
                  emailAddresses:
                    email1: <string>
                    email2: <string>
                    email3: <string>
                    email4: <string>
                    email5: <string>
                NextPage: <string>
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
    post:
      tags:
        - common > connectionrequests
      summary: Create a connection request
      description: Creates a connection request on behalf of the specified user.
      requestBody:
        content: {}
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: user
          in: query
          schema:
            type: string
          description: >-
            (Required) The login ID of the user for whom to create the
            connection request.
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ID: <string>
                URI: <string>
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
        '409':
          description: Conflict
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
